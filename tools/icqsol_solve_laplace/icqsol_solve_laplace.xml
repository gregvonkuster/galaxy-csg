<?xml version='1.0' encoding='UTF-8'?>
<tool id="icqsol_solve_laplace" name="Solve Laplace equation" version="@WRAPPER_VERSION@.0">
    <description>Computes the jump of normal electric field given a potential field on the surface of a shape.
    </description>
    <macros>
        <import>icqsol_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command>
<![CDATA[
    python $__tool_directory__/icqsol_solve_laplace.py
    --input "$input"
    --input_file_format_and_type $input.ext
    --input_dataset_type $input.metadata.dataset_type
    --input_potential_name "$input_potential_name"
    --output_jump_electric_field_name "$output_jump_electric_field_name"
    --output "$output"
    --output_vtk_type $output_vtk_type
]]>
    </command>
    <inputs>
        <param name="input" type="data" format="vtkascii,vtkbinary" label="Shape" help="Format can be vtkascii or vtkbinary." />
        <param name="input_potential_name" type="select" label="Field name" refresh_on_change="True"> 
            <options>
                <filter type="data_meta" ref="input" key="field_names"/>
                <validator type="no_options" message="The selected shape has no surface fields." />
            </options>
        </param>
        <param name="output_jump_electric_field_name" type="text" value="jumpEn" label="Output flux field name" help="Name of the jump of normal electric field name in the output file." />
    </inputs>
    <outputs>
        <data name="output" format="vtkascii">
            <actions>
                <action type="format">
                    <option type="from_param" name="output_vtk_type" />
                </action>
            </actions>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input" value="sphere.vtkbinary" ftype="vtkbinary" />
            <param name="input_file_format_and_type" value="vtkbinary" />
            <param name="input_dataset_type" value="POLYDATA" />
            <param name="input_potential_name" value="v" />
            <param name="output_jump_electric_field_name" value="E_normal_jump" />
            <output name="output" file="sphere_electric_field.vtkascii" ftype="vtkascii" />
            <param name="output_vtk_type" value="vtkascii" />
        </test>
    </tests>
    <help>
**What it does**

Computes the jump in flux-like (Neumann) boundary conditions given prescribed Dirichlet boundary 
conditions by using the boundary element method.  Depending on the problem, the jump can 
be the surface flux or the normal electric field in electrostatic problems. The Dirichlet
field is often called the potential (e.g. electrostatic potential). When the domain extends 
from the object to infinity and the interior of the object is perfectly conducting then 
the jump corresponds to the normal electric field just outside the object. 

    </help>
    <expand macro="citations" />
</tool>
