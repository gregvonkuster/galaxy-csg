<?xml version='1.0' encoding='UTF-8'?>
<tool id="icqsol_solve_laplace" name="Solve Laplace equation" version="@WRAPPER_VERSION@.0">
    <description>This tool will find the jump of Neumann boundary conditions at the surface of the shape corresponding to prescribed 
    Dirichlet boundary conditions. In electrostatics, the tool can be used to determine the normal electric field 
    on the surface given potential values if the material inside the shape is a perfect conductor (specify diffusivity=1 
    in this case).</description>
    <macros>
        <import>icqsol_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command>
<![CDATA[
    python $__tool_directory__/icqsol_solve_laplace.py
    --input "$input"
    --input_file_format_and_type $input.ext
    --input_dataset_type $input.metadata.dataset_type
    --input_name $input_name
    --diffusivity $diffusivity
    --dirichlet $dirichlet
    --output_name $output_name
    #if $refine_shape_cond.refine_shape == "yes":
        --max_edge_length $refine_shape_cond.max_edge_length
    #end if
    --output "$output"
    --output_vtk_type $output_vtk_type
]]>
    </command>
    <inputs>
        <param name="input" type="data" format="vtkascii,vtkbinary" label="Shape" help="Format can be vtkascii or vtkbinary." />
        <param name="input_name" type="data" label="Input (potential) field name" help="Name of the Dirichlet surface field." />
        <param name="output_name" type="data" label="Output flux field name" help="Name of the Neumann-like surface field." />
        <param name="diffusivity" type="float" label="Output field will be multiplied by this constant" help="Diffusion coefficient in Fick's law." />
        <param name="dirichlet" type="data" label="Dirichlet boundary condition expression" help="Expression of x, y, and z" />
        <conditional name="refine_shape_cond">
            <param name="refine_shape" type="select" label="Refine shape?" help="Points will be added to the shape's edges restricting their length to the maximum.">
                <option value="no" selected="True">No</option>
                <option value="yes">Yes</option>
            </param>
            <when value="no" />
            <when value="yes">
                <param name="max_edge_length" type="float" value="0.1" label="Maximum edge length" help="Refine shape by restricting edges to this length.">
                    <validator type="in_range" min="0" exclude_min="true" />
                </param>
            </when>
        </conditional>
        <expand macro="output_vtk_type_params" />
    </inputs>
    <outputs>
        <data name="output" format="vtkascii">
            <actions>
                <action type="format">
                    <option type="from_param" name="output_vtk_type" />
                </action>
            </actions>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="input" value="sphere.vtkbinary" ftype="vtkbinary" />
            <param name="input_file_format_and_type" value="vtkbinary" />
            <param name="input_dataset_type" value="POLYDATA" />
            <param name="input_name" value="v" />
            <param name="output_name" value="E_normal" />
            <param name="diffusivity" value="1.0" />
            <param name="dirichlet" value="1./sqrt(x**2 + y**2 + z**2)" />
            <param name="max_edge_length" value="0.2" />
            <output name="output" file="sphere_electric_field.vtkascii" ftype="vtkascii" />
            <param name="output_vtk_type" value="vtkascii" />
        </test>
    </tests>
    <help>
**What it does**

Determines the jump in flux-like boundary confitions (proportional to the normal derivative of the field) 
given prescribed Dirichlet boundary conditions on the surface of the shape by using the boundary element 
method.  Depending on the problem, the jump can be the flux at the surface of the shape. For instance, 
to solve an electrostatice problem in the domain extending from the shape to infinity, simply set the 
electric potential values on the shape and the diffusivity to 1, the result will be the normal electric
field on the surface for a perfectily conducting material inside the shape. If the conductor is outside 
the shape then set the diffusivity to -1 for the normal electric field just inside the shape.  
Refinement can be applied for a smoother
result.

* **Diffusivity** - The coefficient relating the flux to the field, a diffusivity of one means flux = - dv/dn.
* **Maximum edge length** - The shape's edges are smoothed by adding points to edges that are longer than the defined maximum length.

    </help>
    <expand macro="citations" />
</tool>
