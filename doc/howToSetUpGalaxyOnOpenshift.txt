How To Set Up Galaxy on Openshift
=================================

alexander _ at _ gokliya _ dot _ net
Mon Oct  5 09:50:27 EDT 2015

Galaxy is scientific workflow, data integration and analysis tool with analysis persistence and publishing capability tool, which requires no programming experience. 

Openshift is a Platform-as-a-Service (PaaS) from Red Hat. Developers can 
use Git to deploy web applications in different languages (python, ruby, 
java, etc.).



0. Preparation
--------------

Setup rhc commands according to https://developers.openshift.com/en/managing-client-tools.html

The name of app is "mygalaxy" and can be changed

$ is the prompt on the client
> is the prompt on the server

Mostly followed https://blog.openshift.com/how-to-run-apache-tomcat-8-on-openshift/ and adapted for galaxy

1. Create galaxy do-it-yourself app
-----------------------------------

$ rhc app create mygalaxy diy

2. Stop default, ruby http server
---------------------------------

$ rhc app stop mygalaxy 

3. remove default server
------------------------

$ cd mygalaxy/diy
$ rm index.html  testrubyserver.rb 
$ git commit -a 
$ git push 

4. clone and run galaxy in the cloud
------------------------------------

$ rhc ssh mygalaxy
> cd $OPENSHIFT_DATA_DIR
> mkdir source dependencies
> cd source
> git clone https://github.com/galaxyproject/galaxy.git
> cd galaxy

6. edit config/galaxy.ini
-------------------------

> cp config/galaxy.ini.sample config/galaxy.ini
set host to the output of "env | grep $OPENSHIFT_DIY_IP" (in my case 127.9.120.1). Keep default port 8080. 

7. Set PYTHON_EGG_CACHE variable
---------------------------------

Installing python packages requires su permissions. To overcome this, install the packages under $OPENSHIFT_DATA_DIR

> export PYTHON_EGG_CACHE=$OPENSHIFT_DATA_DIR/dependencies

Note: may need to 
$ rhc env set PYTHON_EGG_CACHE=$OPENSHIFT_DATA_DIR/dependencies -a mygalaxy

8. Run galaxy
-------------

> sh run.sh 
You will see an error related to the database being too old, 
> sh manage_db.sh -c ./config/galaxy.ini.sample upgrade
> sh run.sh
At that point you should be able to connect to a galaxy instance running on openshift. To get the URL, type 
$ rhc app show galaxy 
Tech-Xs-MacBook-Pro:openshift pletzer$ rhc app show galaxy
galaxy @ http://galaxy-pedees.rhcloud.com/ (uuid: 5611ccc02d52713b6000010c)
---------------------------------------------------------------------------
  Domain:     pedees
  Created:    9:05 PM
  Gears:      1 (defaults to small)
  Git URL:    ssh://5611ccc02d52713b6000010c@galaxy-pedees.rhcloud.com/~/git/galaxy.git/
  SSH:        5611ccc02d52713b6000010c@galaxy-pedees.rhcloud.com
  Deployment: auto (on git push)

  diy-0.1 (Do-It-Yourself 0.1)
  ----------------------------
    Gears: 1 small

9. Edit the start/stop scripts
------------------------------

$ cd galaxy
$ cat > .openshift/action_hooks/start <<EOF
sh \$OPENSHIFT_DATA_DIR/source/galaxy/run.sh -—daemon
EOF
$ cat > .openshift/action_hooks/stop <<EOF
sh \$OPENSHIFT_DATA_DIR/source/galaxy/run.sh -—stop-daemon
EOF
$ git commit -a 
$ git push 
